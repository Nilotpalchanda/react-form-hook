{"version":3,"file":"static/js/886.516271a6.chunk.js","mappings":"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","sources":["Components/Login/Login.js"],"sourcesContent":["import React from 'react';\r\nimport './Login.css';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    emailId: yup.string().email().required('Email is required'),\r\n    password: yup\r\n        .string()\r\n        .matches(/^[0-9]+$/, 'Must be only digits')\r\n        .min(5, 'Value should be more than 5 digits')\r\n        .required('Password is required')\r\n});\r\n\r\nconst Login = () => {\r\n    const [loginData, setLoginData] = React.useState({});\r\n    const [formData, setFormData] = React.useState({});\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    React.useEffect(() => {\r\n        document.title = 'React Forms Hook Login';\r\n        if (location.pathname === '/dashboard/3') {\r\n            document.getElementsByTagName('body')[0].style.display = 'inherit';\r\n            document.getElementsByTagName('body')[0].style.paddingTop = '40px';\r\n\r\n        } else {\r\n            document.getElementsByTagName('body')[0].style.display = 'flex';\r\n        }\r\n        let localStorageData = localStorage.getItem('loginDetails');\r\n        setLoginData(JSON.parse(localStorageData));\r\n    }, []);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting }\r\n    } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    async function onSubmitLoginHandler(data) {\r\n        if (location.pathname === '/dashboard/3') {\r\n            setFormData(data);\r\n            return;\r\n        }\r\n        if (loginData) {\r\n            if (\r\n                data.emailId === loginData.data.emailId &&\r\n                data.password === loginData.data.password\r\n            ) {\r\n                await new Promise((r) => setTimeout(r, 1000)); // Simulate API call\r\n                navigate('/dashboard', {\r\n                    state: {\r\n                        userName: loginData.data.fullName,\r\n                        emailId: loginData.data.emailId\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <main className=\"form-signin text-center bg-body rounded shadow-lg\">\r\n                <form onSubmit={handleSubmit(onSubmitLoginHandler)}>\r\n                    <h1 className=\"h3 mb-3 fw-normal\">Login</h1>\r\n\r\n                    <div className=\"form-floating mb-2\">\r\n                        <input\r\n                            type=\"email\"\r\n                            className={`form-control ${\r\n                                errors.emailId ? 'is-invalid' : ''\r\n                            }`}\r\n                            id=\"emailId\"\r\n                            placeholder=\"name@example.com\"\r\n                            {...register('emailId')}\r\n                        />\r\n                        {errors.emailId && (\r\n                            <div class=\"invalid-feedback\">\r\n                                {errors.emailId.message}\r\n                            </div>\r\n                        )}\r\n                        <label htmlFor=\"floatingInput\">Email address</label>\r\n                    </div>\r\n                    <div className=\"form-floating mb-2\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className={`form-control m-0 ${\r\n                                errors.password ? 'is-invalid' : ''\r\n                            }`}\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            {...register('password')}\r\n                        />\r\n                        {errors.password && (\r\n                            <div class=\"invalid-feedback\">\r\n                                {errors.password.message}\r\n                            </div>\r\n                        )}\r\n                        <label htmlFor=\"floatingPassword\">Password</label>\r\n                    </div>\r\n\r\n                    <button\r\n                        className={`w-100 btn btn-lg  login-button `}\r\n                        type=\"submit\"\r\n                    >\r\n                        {isSubmitting ? 'Loading....' : 'Sign in'}\r\n                    </button>\r\n                        <p className=\"has-account\">\r\n                            Don't have an account?&nbsp;<Link to={'/signup'}>Sign Up</Link>\r\n                        </p>\r\n                </form>\r\n            </main>\r\n            {Object.keys(formData)?.length > 0 && !isSubmitting && (\r\n                <div className=\"form-signin container bg-body rounded shadow-lg mt-4 pt-4 pb-4 \">\r\n                    <h1>Form Data</h1>\r\n                    <pre>{JSON.stringify(formData, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["schema","yup","shape","emailId","email","required","password","matches","min","Login","_Object$keys","loginData","setLoginData","React","formData","setFormData","navigate","useNavigate","location","useLocation","document","title","pathname","getElementsByTagName","style","display","paddingTop","localStorageData","localStorage","getItem","JSON","parse","register","handleSubmit","formState","errors","isSubmitting","useForm","resolver","yupResolver","_jsxs","_Fragment","children","_jsx","className","onSubmit","async","data","Promise","r","setTimeout","state","userName","fullName","_objectSpread","type","concat","id","placeholder","class","message","htmlFor","Link","to","Object","keys","length","stringify"],"sourceRoot":""}