{"version":3,"file":"static/js/772.d0dbbc1d.chunk.js","mappings":"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","sources":["Components/DashBoard/FormManagement/HealthForm/HealthForm.js"],"sourcesContent":["import React from 'react';\r\nimport { useFieldArray, useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport './HealthForm.css';\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().required('First name is required'),\r\n    lastName: yup.string().required('Last name is required'),\r\n    dob: yup.date().required('Date of Birth is required'),\r\n    email: yup\r\n        .string()\r\n        .email('Invalid email address')\r\n        .required('Email address is required'),\r\n    insurancePlan: yup.string().required('Insurance plan is required'),\r\n    mailingAddress: yup.array().of(\r\n        yup.object().shape({\r\n            streetAddress: yup.string().required('Street Address is required'),\r\n            city: yup.string().required('City is required'),\r\n            region: yup.string().required('Region is required'),\r\n            postalCode: yup.string().required('Postal Code is required')\r\n        })\r\n    )\r\n});\r\nconst HealthForm = () => {\r\n    const [formState, setFormState] = React.useState({});\r\n    React.useEffect(() => {\r\n        document.title = 'Health Insurance Enrollment Form with Yup';\r\n    }, []);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        formState: { errors, isValid }\r\n    } = useForm({\r\n        defaultValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            dob: '',\r\n            email: '',\r\n            insurancePlan: '',\r\n\r\n            mailingAddress: [\r\n                { streetAddress: '', city: '', region: '', postalCode: '' }\r\n            ]\r\n        },\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const { fields, append, remove } = useFieldArray({\r\n        control,\r\n        name: 'mailingAddress'\r\n    });\r\n\r\n    async function onSubmit(data) {\r\n        await new Promise((r) => setTimeout(r, 1000)); // Simulate API call\r\n        setFormState(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container bg-body rounded shadow-lg mt-4 pt-4 pb-4 health-form\">\r\n                <h1 className=\"\">Health Insurance Enrollment Form</h1>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"row\">\r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"firstName\" className=\"form-label\">\r\n                                Employee name\r\n                            </label>\r\n                            <div className=\"col-6\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={`form-control ${\r\n                                        errors.firstName ? 'is-invalid' : ''\r\n                                    }`}\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"First name\"\r\n                                    {...register('firstName')}\r\n                                />\r\n                                {errors.firstName && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.firstName.message}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={`form-control ${\r\n                                        errors.lastName ? 'is-invalid' : ''\r\n                                    }`}\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"Last name\"\r\n                                    {...register('lastName')}\r\n                                />\r\n                                {errors.lastName && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.lastName.message}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3 row\">\r\n                            <div className=\"col-12\">\r\n                                <label htmlFor=\"dob\" className=\"form-label\">\r\n                                    Date of Birth\r\n                                </label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className={`form-control ${\r\n                                        errors.dob ? 'is-invalid' : ''\r\n                                    }`}\r\n                                    id=\"dob\"\r\n                                    {...register('dob', { valueAsDate: true })}\r\n                                />\r\n                                {errors.dob && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.dob.message}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3 row\">\r\n                            {fields.map((item, index) => {\r\n                                return (\r\n                                    <>\r\n                                        <div\r\n                                            className=\"col-11 mt-2\"\r\n                                            key={item.id}\r\n                                        >\r\n                                            <label\r\n                                                htmlFor=\"streetAddress\"\r\n                                                className=\"form-label\"\r\n                                            >\r\n                                                Mailing address\r\n                                            </label>\r\n                                            <div className=\"col-12\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className={`form-control ${\r\n                                                        errors.streetAddress\r\n                                                            ? 'is-invalid'\r\n                                                            : ''\r\n                                                    }`}\r\n                                                    id=\"streetAddress\"\r\n                                                    placeholder=\"Street Address\"\r\n                                                    {...register(\r\n                                                        `mailingAddress.${index}.streetAddress`\r\n                                                    )}\r\n                                                />\r\n                                                {errors.streetAddress && (\r\n                                                    <div className=\"invalid-feedback\">\r\n                                                        {\r\n                                                            errors.streetAddress\r\n                                                                .message\r\n                                                        }\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                            <div className=\"row mt-2\">\r\n                                                <div className=\"col-4\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className={`form-control ${\r\n                                                            errors.city\r\n                                                                ? 'is-invalid'\r\n                                                                : ''\r\n                                                        }`}\r\n                                                        id=\"city\"\r\n                                                        placeholder=\"City\"\r\n                                                        {...register(\r\n                                                            `mailingAddress.${index}.city`\r\n                                                        )}\r\n                                                    />\r\n                                                    {errors.city && (\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            {\r\n                                                                errors.city\r\n                                                                    .message\r\n                                                            }\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                                <div className=\"col-4\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className={`form-control ${\r\n                                                            errors.region\r\n                                                                ? 'is-invalid'\r\n                                                                : ''\r\n                                                        }`}\r\n                                                        id=\"region\"\r\n                                                        placeholder=\"Region\"\r\n                                                        {...register(\r\n                                                            `mailingAddress.${index}.region`\r\n                                                        )}\r\n                                                    />\r\n                                                    {errors.region && (\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            {\r\n                                                                errors.region\r\n                                                                    .message\r\n                                                            }\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                                <div className=\"col-4\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className={`form-control ${\r\n                                                            errors.postalCode\r\n                                                                ? 'is-invalid'\r\n                                                                : ''\r\n                                                        }`}\r\n                                                        id=\"postalCode\"\r\n                                                        placeholder=\"Postal Code\"\r\n                                                        {...register(\r\n                                                            `mailingAddress.${index}.postalCode`\r\n                                                        )}\r\n                                                    />\r\n                                                    {errors.postalCode && (\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            {\r\n                                                                errors\r\n                                                                    .postalCode\r\n                                                                    .message\r\n                                                            }\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-1 action-btn\">\r\n                                            {index > 0 && (\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    class=\"btn btn-default btn-sm\"\r\n                                                    onClick={() =>\r\n                                                        remove(index)\r\n                                                    }\r\n                                                >\r\n                                                    <svg\r\n                                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                        width=\"16\"\r\n                                                        height=\"16\"\r\n                                                        fill=\"currentColor\"\r\n                                                        class=\"bi bi-trash\"\r\n                                                        viewBox=\"0 0 16 16\"\r\n                                                    >\r\n                                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z\" />\r\n                                                        <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z\" />\r\n                                                    </svg>\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    </>\r\n                                );\r\n                            })}\r\n                            <div className=\"mailing-adress-actions\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-default btn-sm\"\r\n                                    onClick={() =>\r\n                                        append({\r\n                                            streetAddress: '',\r\n                                            city: '',\r\n                                            region: '',\r\n                                            postalCode: ''\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"16\"\r\n                                        height=\"16\"\r\n                                        fill=\"currentColor\"\r\n                                        class=\"bi bi-house-add\"\r\n                                        viewBox=\"0 0 16 16\"\r\n                                    >\r\n                                        <path d=\"M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L2 8.207V13.5A1.5 1.5 0 0 0 3.5 15h4a.5.5 0 1 0 0-1h-4a.5.5 0 0 1-.5-.5V7.207l5-5 6.646 6.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293z\" />\r\n                                        <path d=\"M16 12.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0m-3.5-2a.5.5 0 0 0-.5.5v1h-1a.5.5 0 0 0 0 1h1v1a.5.5 0 1 0 1 0v-1h1a.5.5 0 1 0 0-1h-1v-1a.5.5 0 0 0-.5-.5\" />\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3 row\">\r\n                            <div className=\"col-12\">\r\n                                <label htmlFor=\"email\" className=\"form-label\">\r\n                                    Email address\r\n                                </label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className={`form-control ${\r\n                                        errors.email ? 'is-invalid' : ''\r\n                                    }`}\r\n                                    id=\"email\"\r\n                                    placeholder=\"abc@domain.com\"\r\n                                    {...register('email')}\r\n                                />\r\n                                {errors.email && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.email.message}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3 row\">\r\n                            <div className=\"col-12\">\r\n                                <label\r\n                                    htmlFor=\"insurancePlan\"\r\n                                    className=\"form-label\"\r\n                                >\r\n                                    Insurance plan\r\n                                </label>\r\n                                <div class=\"form-check\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        class=\"form-check-input\"\r\n                                        id=\"validationFormCheck2\"\r\n                                        value={'Insurance Plan 1'}\r\n                                        {...register('insurancePlan')}\r\n                                    />\r\n                                    <label\r\n                                        class=\"form-check-label\"\r\n                                        for=\"validationFormCheck2\"\r\n                                    >\r\n                                        Insurance Plan 1\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        class=\"form-check-input\"\r\n                                        id=\"validationFormCheck2\"\r\n                                        value={'Insurance Plan 2'}\r\n                                        {...register('insurancePlan')}\r\n                                    />\r\n                                    <label\r\n                                        class=\"form-check-label\"\r\n                                        for=\"validationFormCheck2\"\r\n                                    >\r\n                                        Insurance Plan 2\r\n                                    </label>\r\n                                </div>\r\n\r\n                                {errors.insurancePlan && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.insurancePlan.message}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className={` submit-hf ${\r\n                                        !isValid\r\n                                            ? 'btn btn-secondary'\r\n                                            : 'btn btn-primary'\r\n                                    }`}\r\n                                    disabled={!isValid}\r\n                                >\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            {(Object.keys(formState)?.length > 0 && isValid) && (\r\n                <div className=\"container bg-body rounded shadow-lg mt-4 pt-4 pb-4 heath-form-data\">\r\n                    <h1>Form Data</h1>\r\n                    <pre>{JSON.stringify(formState, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HealthForm;\r\n"],"names":["schema","yup","shape","firstName","required","lastName","dob","email","insurancePlan","mailingAddress","of","streetAddress","city","region","postalCode","HealthForm","_Object$keys","formState","setFormState","React","document","title","register","handleSubmit","control","errors","isValid","useForm","defaultValues","resolver","yupResolver","fields","append","remove","useFieldArray","name","_jsxs","_Fragment","children","className","_jsx","onSubmit","async","data","Promise","r","setTimeout","htmlFor","_objectSpread","type","concat","id","placeholder","message","valueAsDate","map","item","index","class","onClick","xmlns","width","height","fill","viewBox","d","value","for","disabled","Object","keys","length","JSON","stringify"],"sourceRoot":""}