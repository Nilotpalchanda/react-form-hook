{"version":3,"file":"static/js/772.1693da38.chunk.js","mappings":"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","sources":["Components/DashBoard/FormManagement/HealthForm/HealthForm.js"],"sourcesContent":["import React from 'react';\r\nimport { useFieldArray, useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport './HealthForm.css';\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().required('First name is required'),\r\n    lastName: yup.string().required('Last name is required'),\r\n    dob: yup.date().required('Date of Birth is required'),\r\n    email: yup\r\n        .string()\r\n        .email('Invalid email address')\r\n        .required('Email address is required'),\r\n    insurancePlan: yup.string().required('Insurance plan is required'),\r\n    mailingAddress: yup.array().of(\r\n        yup.object().shape({\r\n            streetAddress: yup.string().required('Street Address is required'),\r\n            city: yup.string().required('City is required'),\r\n            region: yup.string().required('Region is required'),\r\n            postalCode: yup.string().required('Postal Code is required')\r\n        })\r\n    )\r\n});\r\nconst HealthForm = () => {\r\n    const [formState, setFormState] = React.useState({});\r\n    React.useEffect(() => {\r\n        document.title = 'Health Insurance Enrollment Form with Yup';\r\n    }, []);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        formState: { errors, isValid, isSubmitting }\r\n    } = useForm({\r\n        defaultValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            dob: '',\r\n            email: '',\r\n            insurancePlan: '',\r\n\r\n            mailingAddress: [\r\n                { streetAddress: '', city: '', region: '', postalCode: '' }\r\n            ]\r\n        },\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const { fields, append, remove } = useFieldArray({\r\n        control,\r\n        name: 'mailingAddress'\r\n    });\r\n\r\n    async function onSubmit(data) {\r\n        await new Promise((r) => setTimeout(r, 1000)); // Simulate API call\r\n        setFormState(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`container bg-body rounded shadow-lg mt-4 pt-4 pb-4 ${(Object.keys(formState)?.length > 0 && isValid && !isSubmitting) ? 'health-form-with-result' : 'health-form'}`}>\r\n                <h1 className=\"\">Health Insurance Enrollment Form</h1>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"row\">\r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"firstName\" className=\"form-label\">\r\n                                Employee name\r\n                            </label>\r\n                            <div className=\"col-6\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={`form-control ${\r\n                                        errors.firstName ? 'is-invalid' : ''\r\n                                    }`}\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"First name\"\r\n                                    {...register('firstName')}\r\n                                />\r\n                                {errors.firstName && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.firstName.message}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={`form-control ${\r\n                                        errors.lastName ? 'is-invalid' : ''\r\n                                    }`}\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"Last name\"\r\n                                    {...register('lastName')}\r\n                                />\r\n                                {errors.lastName && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.lastName.message}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3 row\">\r\n                            <div className=\"col-12\">\r\n                                <label htmlFor=\"dob\" className=\"form-label\">\r\n                                    Date of Birth\r\n                                </label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className={`form-control ${\r\n                                        errors.dob ? 'is-invalid' : ''\r\n                                    }`}\r\n                                    id=\"dob\"\r\n                                    {...register('dob', { valueAsDate: true })}\r\n                                />\r\n                                {errors.dob && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.dob.message}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3 row\">\r\n                            {fields.map((item, index) => {\r\n                                return (\r\n                                    <>\r\n                                        <div\r\n                                            className=\"col-11 mt-2\"\r\n                                            key={item.id}\r\n                                        >\r\n                                            <label\r\n                                                htmlFor=\"streetAddress\"\r\n                                                className=\"form-label\"\r\n                                            >\r\n                                                Mailing address\r\n                                            </label>\r\n                                            <div className=\"col-12\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className={`form-control ${\r\n                                                        errors.streetAddress\r\n                                                            ? 'is-invalid'\r\n                                                            : ''\r\n                                                    }`}\r\n                                                    id=\"streetAddress\"\r\n                                                    placeholder=\"Street Address\"\r\n                                                    {...register(\r\n                                                        `mailingAddress.${index}.streetAddress`\r\n                                                    )}\r\n                                                />\r\n                                                {errors.streetAddress && (\r\n                                                    <div className=\"invalid-feedback\">\r\n                                                        {\r\n                                                            errors.streetAddress\r\n                                                                .message\r\n                                                        }\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                            <div className=\"row mt-2\">\r\n                                                <div className=\"col-4\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className={`form-control ${\r\n                                                            errors.city\r\n                                                                ? 'is-invalid'\r\n                                                                : ''\r\n                                                        }`}\r\n                                                        id=\"city\"\r\n                                                        placeholder=\"City\"\r\n                                                        {...register(\r\n                                                            `mailingAddress.${index}.city`\r\n                                                        )}\r\n                                                    />\r\n                                                    {errors.city && (\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            {\r\n                                                                errors.city\r\n                                                                    .message\r\n                                                            }\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                                <div className=\"col-4\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className={`form-control ${\r\n                                                            errors.region\r\n                                                                ? 'is-invalid'\r\n                                                                : ''\r\n                                                        }`}\r\n                                                        id=\"region\"\r\n                                                        placeholder=\"Region\"\r\n                                                        {...register(\r\n                                                            `mailingAddress.${index}.region`\r\n                                                        )}\r\n                                                    />\r\n                                                    {errors.region && (\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            {\r\n                                                                errors.region\r\n                                                                    .message\r\n                                                            }\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                                <div className=\"col-4\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className={`form-control ${\r\n                                                            errors.postalCode\r\n                                                                ? 'is-invalid'\r\n                                                                : ''\r\n                                                        }`}\r\n                                                        id=\"postalCode\"\r\n                                                        placeholder=\"Postal Code\"\r\n                                                        {...register(\r\n                                                            `mailingAddress.${index}.postalCode`\r\n                                                        )}\r\n                                                    />\r\n                                                    {errors.postalCode && (\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            {\r\n                                                                errors\r\n                                                                    .postalCode\r\n                                                                    .message\r\n                                                            }\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-1 action-btn\">\r\n                                            {index > 0 && (\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    class=\"btn btn-default btn-sm\"\r\n                                                    onClick={() =>\r\n                                                        remove(index)\r\n                                                    }\r\n                                                >\r\n                                                    <svg\r\n                                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                        width=\"16\"\r\n                                                        height=\"16\"\r\n                                                        fill=\"currentColor\"\r\n                                                        class=\"bi bi-trash\"\r\n                                                        viewBox=\"0 0 16 16\"\r\n                                                    >\r\n                                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z\" />\r\n                                                        <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z\" />\r\n                                                    </svg>\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    </>\r\n                                );\r\n                            })}\r\n                            <div className=\"mailing-adress-actions\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-default btn-sm\"\r\n                                    onClick={() =>\r\n                                        append({\r\n                                            streetAddress: '',\r\n                                            city: '',\r\n                                            region: '',\r\n                                            postalCode: ''\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"16\"\r\n                                        height=\"16\"\r\n                                        fill=\"currentColor\"\r\n                                        class=\"bi bi-house-add\"\r\n                                        viewBox=\"0 0 16 16\"\r\n                                    >\r\n                                        <path d=\"M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L2 8.207V13.5A1.5 1.5 0 0 0 3.5 15h4a.5.5 0 1 0 0-1h-4a.5.5 0 0 1-.5-.5V7.207l5-5 6.646 6.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293z\" />\r\n                                        <path d=\"M16 12.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0m-3.5-2a.5.5 0 0 0-.5.5v1h-1a.5.5 0 0 0 0 1h1v1a.5.5 0 1 0 1 0v-1h1a.5.5 0 1 0 0-1h-1v-1a.5.5 0 0 0-.5-.5\" />\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3 row\">\r\n                            <div className=\"col-12\">\r\n                                <label htmlFor=\"email\" className=\"form-label\">\r\n                                    Email address\r\n                                </label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className={`form-control ${\r\n                                        errors.email ? 'is-invalid' : ''\r\n                                    }`}\r\n                                    id=\"email\"\r\n                                    placeholder=\"abc@domain.com\"\r\n                                    {...register('email')}\r\n                                />\r\n                                {errors.email && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.email.message}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3 row\">\r\n                            <div className=\"col-12\">\r\n                                <label\r\n                                    htmlFor=\"insurancePlan\"\r\n                                    className=\"form-label\"\r\n                                >\r\n                                    Insurance plan\r\n                                </label>\r\n                                <div class=\"form-check\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        class=\"form-check-input\"\r\n                                        id=\"validationFormCheck2\"\r\n                                        value={'Insurance Plan 1'}\r\n                                        {...register('insurancePlan')}\r\n                                    />\r\n                                    <label\r\n                                        class=\"form-check-label\"\r\n                                        for=\"validationFormCheck2\"\r\n                                    >\r\n                                        Insurance Plan 1\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        class=\"form-check-input\"\r\n                                        id=\"validationFormCheck2\"\r\n                                        value={'Insurance Plan 2'}\r\n                                        {...register('insurancePlan')}\r\n                                    />\r\n                                    <label\r\n                                        class=\"form-check-label\"\r\n                                        for=\"validationFormCheck2\"\r\n                                    >\r\n                                        Insurance Plan 2\r\n                                    </label>\r\n                                </div>\r\n\r\n                                {errors.insurancePlan && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.insurancePlan.message}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className={` submit-hf ${\r\n                                        !isValid\r\n                                            ? 'btn btn-secondary'\r\n                                            : 'btn btn-primary'\r\n                                    }`}\r\n                                    disabled={!isValid}\r\n                                >\r\n                                    {isSubmitting ? \"Sumitting....\" : \"Submit\"}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            {(Object.keys(formState)?.length > 0 && isValid && !isSubmitting) && (\r\n                <div className=\"container bg-body rounded shadow-lg mt-4 pt-4 pb-4 heath-form-data\">\r\n                    <h1>Form Data</h1>\r\n                    <pre>{JSON.stringify(formState, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HealthForm;\r\n"],"names":["schema","yup","shape","firstName","required","lastName","dob","email","insurancePlan","mailingAddress","of","streetAddress","city","region","postalCode","HealthForm","_Object$keys","_Object$keys2","formState","setFormState","React","document","title","register","handleSubmit","control","errors","isValid","isSubmitting","useForm","defaultValues","resolver","yupResolver","fields","append","remove","useFieldArray","name","_jsxs","_Fragment","children","className","concat","Object","keys","length","_jsx","onSubmit","async","data","Promise","r","setTimeout","htmlFor","_objectSpread","type","id","placeholder","message","valueAsDate","map","item","index","class","onClick","xmlns","width","height","fill","viewBox","d","value","for","disabled","JSON","stringify"],"sourceRoot":""}